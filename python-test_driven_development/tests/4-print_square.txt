The ``4-print_square`` module
======================

Using ``print_square``
-------------------

This is an example text file in reStructuredText format. First import
``print_square`` from the ``4-print_square`` module:

    >>> print_square = __import__('4-print_square').print_square

Now use it:

Basic square printing:
    >>> print_square(4)
    ####
    ####
    ####
    ####

    >>> print_square(10)
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########

Edge cases:
    >>> print_square(0)

    >>> print_square(1)
    #

Type error cases:
    >>> print_square(-1)
    Traceback (most recent call last):
    ValueError: size must be >= 0

    >>> print_square("4")
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> print_square(None)
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> print_square([4])
    Traceback (most recent call last):
    TypeError: size must be an integer

Float cases:
    >>> print_square(4.0)
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> print_square(-1.5)
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> print_square(2.5)
    Traceback (most recent call last):
    TypeError: size must be an integer

Large square:
    >>> print_square(2)
    ##
    ##